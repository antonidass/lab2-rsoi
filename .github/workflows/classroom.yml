name: GitHub Classroom Workflow
on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master
jobs:
  car-build:
    name: car-build
    runs-on: ubuntu-latest
    environment: Deploy
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: set up JDK 21
        uses: actions/setup-java@v1
        with:
          java-version: 1.21
      - name: Gradle Build
        run: cd CarsService && ./gradlew build --exclude-task test
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: Package
          path: CarsService/build/libs/*.jar
          retention-days: 1

  car-unit-test:
    runs-on: ubuntu-latest
    environment: Deploy
    needs: [car-build]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
      - name: set up JDK 21
        uses: actions/setup-java@v1
        with:
          java-version: 1.21
      - name: Gradle Test
        run: cd CarsService && ./gradlew test

  car-docker-build-publish:
    runs-on: ubuntu-latest
    environment: Deploy
    needs: [car-unit-test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v3
        with:
          name: Package
          path: ./CarsService/build/libs

      - name: Build image
        run: cd CarsService && docker build -t car_service . --tag antonidass/rsoi2-car-service:latest

      - name: Publish Docker image
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASS: ${{ secrets.DOCKERHUB_PASS }}
        run: |
          echo "${DOCKERHUB_PASS}" | docker login --username "${DOCKERHUB_USERNAME}" --password-stdin
          docker push antonidass/rsoi2-car-service:latest

  # deploy:
  #   name: deploy
  #   environment: Deploy
  #   runs-on: ubuntu-latest
  #   needs: [car-docker-build-publish]
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0

  #     - name: Move to VM
  #       uses: appleboy/scp-action@v0.1.4
  #       with:
  #         host: ${{ secrets.DEPLOY_HOST }}
  #         username: ${{ secrets.DEPLOY_USR }}
  #         key: ${{ secrets.SSH_KEY }}
  #         port: ${{ secrets.SSH_PORT }}
  #         source: "postgres,docker-compose.yml"
  #         target: /opt/person-service

  #     - name: Run app on VM
  #       uses: appleboy/ssh-action@v1.0.0
  #       env:
  #         DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  #         DOCKERHUB_PASS: ${{ secrets.DOCKERHUB_PASS }}
  #       with:
  #         host: ${{ secrets.DEPLOY_HOST }}
  #         username: ${{ secrets.DEPLOY_USR }}
  #         key: ${{ secrets.SSH_KEY }}
  #         port: ${{ secrets.SSH_PORT }}
  #         script: |
  #           echo "${DOCKERHUB_PASS}" | docker login --username "${DOCKERHUB_USERNAME}" --password-stdin
  #           cd /opt/person-service
  #           docker compose up --build -d person_service
  # autograding:
  #   name: autograding
  #   environment: Deploy
  #   runs-on: ubuntu-latest
  #   needs: [deploy]
  #   steps:
  #     - name: Run API Tests
  #       uses: matt-ball/newman-action@master
  #       with:
  #         collection: postman/[inst] Lab1.postman_collection.json
  #         environment: postman/[inst][heroku] Lab1.postman_environment.json
  #         delayRequest: 100
  #         reporters: '[ "cli" ]'

  #     - name: Autograding
  #       uses: education/autograding@v1
  #       continue-on-error: true

  #     - name: Github auto grader mark
  #       uses: Romanow/google-sheet-autograder-marker@v1.0
  #       with:
  #         google_token: ${{secrets.GOOGLE_API_KEY}}
  #         sheet_id: "1xkgjUX6Qmk7rdJG-QPOToav-HWWtthJjnShIKnw3oIY"
  #         homework_number: 1
  #         user_column: "D"
  #         column_offset: "F"
  #         mark: "'+"
