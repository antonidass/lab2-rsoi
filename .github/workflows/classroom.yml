name: GitHub Classroom Workflow
on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master
jobs:
  # car-build:
  #   name: car-build
  #   runs-on: ubuntu-latest
  #   environment: Deploy
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #     - name: set up JDK 15
  #       uses: actions/setup-java@v1
  #       with:
  #         java-version: 1.21

  #     - name: Gradle Build
  #       run: cd CarsService && ./gradlew build --exclude-task test

  #     - name: Build image
  #       run: cd CarsService && docker build -t car_service . --tag antonidass/rsoi2-car-service:latest

  #     - name: Upload gateway image
  #       uses: ishworkh/container-image-artifact-upload@v1.0.0
  #       with:
  #         image: "antonidass/rsoi2-car-service:latest"
  #         retention_days: 1

  # car-unit-test:
  #   runs-on: ubuntu-latest
  #   environment: Deploy
  #   needs: [car-build]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/download-artifact@v3
  #     - name: set up JDK 21
  #       uses: actions/setup-java@v1
  #       with:
  #         java-version: 1.21
  #     - name: Gradle Test
  #       run: cd CarsService && ./gradlew test

  # payment-build:
  #   name: payment-build
  #   runs-on: ubuntu-latest
  #   environment: Deploy
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #     - name: set up JDK 15
  #       uses: actions/setup-java@v1
  #       with:
  #         java-version: 1.21

  #     - name: Gradle Build
  #       run: cd PaymentService && ./gradlew build --exclude-task test

  #     - name: Build image
  #       run: cd PaymentService && docker build -t payment_service . --tag antonidass/rsoi2-payment-service:latest

  #     - name: Upload gateway image
  #       uses: ishworkh/container-image-artifact-upload@v1.0.0
  #       with:
  #         image: "antonidass/rsoi2-payment-service:latest"
  #         retention_days: 1

  # payment-unit-test:
  #   runs-on: ubuntu-latest
  #   environment: Deploy
  #   needs: [payment-build]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/download-artifact@v3
  #     - name: set up JDK 21
  #       uses: actions/setup-java@v1
  #       with:
  #         java-version: 1.21
  #     - name: Gradle Test
  #       run: cd PaymentService && ./gradlew test

  # rental-build:
  #   name: rental-build
  #   runs-on: ubuntu-latest
  #   environment: Deploy
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #     - name: set up JDK 15
  #       uses: actions/setup-java@v1
  #       with:
  #         java-version: 1.21

  #     - name: Gradle Build
  #       run: cd RentalService && ./gradlew build --exclude-task test

  #     - name: Build image
  #       run: cd RentalService && docker build -t rental_service . --tag antonidass/rsoi2-rental-service:latest

  #     - name: Upload gateway image
  #       uses: ishworkh/container-image-artifact-upload@v1.0.0
  #       with:
  #         image: "antonidass/rsoi2-rental-service:latest"
  #         retention_days: 1

  # rental-unit-test:
  #   runs-on: ubuntu-latest
  #   environment: Deploy
  #   needs: [rental-build]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/download-artifact@v3
  #     - name: set up JDK 21
  #       uses: actions/setup-java@v1
  #       with:
  #         java-version: 1.21
  #     - name: Gradle Test
  #       run: cd RentalService && ./gradlew test

  # gateway-build:
  #   name: gateway-build
  #   runs-on: ubuntu-latest
  #   environment: Deploy
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #     - name: set up JDK 15
  #       uses: actions/setup-java@v1
  #       with:
  #         java-version: 1.21

  #     - name: Maven Build
  #       run: cd GatewayService && mvn -B clean package -DskipTests

  #     - name: Build image
  #       run: cd GatewayService && docker build -t gateway_service . --tag antonidass/rsoi2-gateway-service:latest

  #     - name: Upload gateway image
  #       uses: ishworkh/container-image-artifact-upload@v1.0.0
  #       with:
  #         image: "antonidass/rsoi2-gateway-service:latest"
  #         retention_days: 1

  # gateway-unit-test:
  #   runs-on: ubuntu-latest
  #   environment: Deploy
  #   needs: [gateway-build]
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/download-artifact@v3
  #     - name: set up JDK 21
  #       uses: actions/setup-java@v1
  #       with:
  #         java-version: 1.21
  #     - name: Maven Test
  #       run: cd GatewayService && mvn -B test

  integration-test:
    name: Run integration tests
    environment: Deploy
    runs-on: ubuntu-latest
    # needs:
    # [car-build, payment-build, gateway-build, rental-build]
    # [car-unit-test, payment-unit-test, rental-unit-test, gateway-unit-test]
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: docker/setup-buildx-action@v2

      - name: Download gateway image
        uses: ishworkh/container-image-artifact-download@v1.0.0
        with:
          image: "antonidass/rsoi2-gateway-service:latest"
      - name: Download car image
        uses: ishworkh/container-image-artifact-download@v1.0.0
        with:
          image: "antonidass/rsoi2-car-service:latest"
      - name: Download payment image
        uses: ishworkh/container-image-artifact-download@v1.0.0
        with:
          image: "antonidass/rsoi2-payment-service:latest"
      - name: Download rental image
        uses: ishworkh/container-image-artifact-download@v1.0.0
        with:
          image: "antonidass/rsoi2-rental-service:latest"

      - name: Setup db
        run: |
          docker-compose up -d postgres
          docker-compose logs postgres
          sleep 5
          cd postgres
          ./30-init-db.sh
          cd ..

      - name: Run containers
        timeout-minutes: 5
        run: |
          docker-compose up -d car
          docker-compose up -d payment
          docker-compose up -d rental
          docker-compose up -d gw
          ./scripts/wait-script.sh
        env:
          WAIT_PORTS: 8080,8070,8060,8050

      - name: Collect docker logs on failure
        if: "!success()"
        uses: jwalton/gh-docker-logs@v2
        with:
          dest: "./logs-docs"

      - name: Upload logs to GitHub
        if: "!success()"
        uses: actions/upload-artifact@master
        with:
          name: logs-docs
          path: ./logs-docs/*

      - name: Run API Tests
        uses: matt-ball/newman-action@master
        with:
          collection: v3/postman/collection.json
          environment: v3/postman/environment.json
          delayRequest: 100
          reporters: '[ "cli" ]'

      - name: Stop containers
        if: always()
        continue-on-error: true
        run: docker-compose down

  publish-images:
    name: Publish Docker Images
    runs-on: ubuntu-latest
    environment: Deploy
    needs: [integration-test]
    timeout-minutes: 15
    steps:
      - name: Download gateway image
        uses: ishworkh/container-image-artifact-download@v1.0.0
        with:
          image: "antonidass/rsoi2-gateway-service:latest"
      - name: Download car image
        uses: ishworkh/container-image-artifact-download@v1.0.0
        with:
          image: "antonidass/rsoi2-car-service:latest"
      - name: Download payment image
        uses: ishworkh/container-image-artifact-download@v1.0.0
        with:
          image: "antonidass/rsoi2-payment-service:latest"
      - name: Download rental image
        uses: ishworkh/container-image-artifact-download@v1.0.0
        with:
          image: "antonidass/rsoi2-rental-service:latest"

      - name: Publish Docker image
        env:
          DOCKERHUB_USR: ${{ secrets.DOCKERHUB_USR }}
          DOCKERHUB_PASS: ${{ secrets.DOCKERHUB_PASS }}
        run: |
          echo "${DOCKERHUB_PASS}" | docker login --username "${DOCKERHUB_USR}" --password-stdin
          docker push antonidass/rsoi2-rental-service:latest
          docker push antonidass/rsoi2-gateway-service:latest
          docker push antonidass/rsoi2-car-service:latest
          docker push antonidass/rsoi2-payment-service:latest

  deploy:
    name: deploy
    environment: Deploy
    runs-on: ubuntu-latest
    needs: [publish-images]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Move to VM
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USR }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "postgres,docker-compose.yml"
          target: /opt/car-rental-service

      - name: Run app on VM
        uses: appleboy/ssh-action@v1.0.0
        env:
          DOCKERHUB_USR: ${{ secrets.DOCKERHUB_USR }}
          DOCKERHUB_PASS: ${{ secrets.DOCKERHUB_PASS }}
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USR }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            echo "${DOCKERHUB_PASS}" | docker login --username "${DOCKERHUB_USR}" --password-stdin
            cd /opt/car-rental-service
            docker-compose pull
            docker-compose up --build -d
